
CREATE TABLE PRESUPUESTOS(
    DEPT_NO NUMBER(2) NOT NULL,
    AÑO NUMBER(4) NOT NULL,
    CANTIDAD NUMBER(12,2) NOT NULL, --10 digitos enteros y 2 decimales-- 
    CONSTRAINT PK_PRESUPUESTOS PRIMARY KEY(DEPT_NO, AÑO),
    CONSTRAINT FK_PRESUPUESTOS_DEPART FOREIGN KEY (DEPT_NO) REFERENCES DEPART
);

CREATE TABLE EMPLEADOS(
    EMP_NO  NUMBER(4),
    DNI     CHAR(9) NOT NULL UNIQUE,
    NOMBRE  VARCHAR2(30) NOT NULL,
    APELLIDOS VARCHAR2(60) NOT NULL,
    OFICIO  VARCHAR2(10),
    FECHA_ALT DATE,
    SALARIO NUMBER(10),
    COMISION NUMBER(10),
    DEPT_NO NUMBER(2) NOT NULL,
    CONSTRAINT PK_EMPLEADOS PRIMARY KEY (EMP_NO),
    CONSTRAINT FK_EMPLE_DEPARTS FOREIGN KEY (DEPT_NO) REFERENCES DEPART
);

CREATE TABLE DIR(
    EMP_NO_EMPLEADO NUMBER(4),
    EMP_NO_JEFE NUMBER(4),
    CONSTRAINT PK_DIR PRIMARY KEY(EMP_NO_EMPLEADO),
    CONSTRAINT FK_DIR_EMPLEADO FOREIGN KEY(EMP_NO_EMPLEADO) REFERENCES EMPLEADOS
);

--TENIENDO EN CUENTA QUE LA TABLA DEPART YA EXISTE--

INSERT INTO EMPLEADOS(EMP_NO, DNI, NOMBRE, APELLIDOS, OFICIO, FECHA_ALT, SALARIO, COMISION, DEPT_NO)
SELECT 
    EMP_NO,
    DNI,
    SUBSTR(APELLIDO, INSTR(APELLIDO, ',') + 1),
    SUBSTR(APELLIDO, 1, INSTR(APELLIDO, ',') - 1),
    OFICIO,
    FECHA_ALT,
    SALARIO / 166.386,
    COMISION / 166.386,
    DEPT_NO
FROM EMPLE;

INSERT INTO DIR (EMP_NO_EMPLEADO,EMP_NO_JEFE)
SELECT 
    EMP_NO,
    DIR
FROM EMPLE;

--VISTA EMPLEADOS_EMPRESA 
CREATE OR REPLACE VIEW EMPLEADOS_EMPRESA AS
SELECT
 EMP_NO,
 DNI, 
 NOMBRE,
 APELLIDOS 
 OFICIO,
 FECHA_ALT,
 SALARIO,
 COMISION,
 DEPT_NO  
 FROM EMPLEADOS;

--VISTA DEPART-PRESUPUESTO Y MOSTRAR LOS DEPARTS SIN PRESUPUESTO
CREATE OR REPLACE VIEW DEPART_PRESUPUESTO AS
SELECT 
    d.DEPT_NO AS CODIGO_DEPARTAMENTO,
    d.DNOMBRE AS NOMBRE_DEPARTAMENTO,
    d.LOC AS LOCALIZACION,
    p.AÑO AS ANIO_PRESUPUESTO,
    p.CANTIDAD AS IMPORTE_PRESUPUESTO
FROM 
    DEPART d,
    PRESUPUESTOS p
WHERE 
    d.DEPT_NO = p.DEPT_NO(+)
ORDER BY 
    d.DEPT_NO, p.AÑO DESC;

    SELECT 
    e.DEPT_NO,
    d.DNOMBRE,
    SUM(e.SALARIO * 14) AS GASTO_SALARIAL,
    SUM(e.SALARIO * 14) * 2 AS PRESUPUESTO_MINIMO
FROM 
    EMPLEADOS e
WHERE e.DEPT_NO=d.DEPT_NO(+) 
GROUP BY 
    e.DEPT_NO, d.DNOMBRE
ORDER BY 
    e.DEPT_NO;

--Procedimiento para insertar presupuestos con validación--

 SET SERVEROUTPUT ON;
DECLARE
   anio NUMBER := TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY'));
   factor NUMBER := 2; -- 2x el gasto salarial
   presupuesto NUMBER;
BEGIN
    FOR depto IN (
        SELECT 
            e.DEPT_NO,
            d.DNOMBRE,
            NVL(SUM(e.SALARIO * 14), 0) AS gasto_salarial
        FROM 
            EMPLEADOS e,
            DEPART d
        WHERE 
            e.DEPT_NO = d.DEPT_NO(+)
        GROUP BY 
            e.DEPT_NO, d.DNOMBRE
    ) LOOP
        -- Calcular presupuesto minimo
       presupuesto := (depto.gasto_salarial *factor);
        
        -- Insertar en PRESUPUESTOS
        INSERT INTO PRESUPUESTOS (DEPT_NO, AÑO, CANTIDAD)
        VALUES (depto.DEPT_NO,anio,presupuesto);
        
        DBMS_OUTPUT.PUT_LINE(
            RPAD('Depto ' || depto.DEPT_NO || ' ' || depto.DNOMBRE, 30) ||
            RPAD('Gasto anual: ' || depto.gasto_salarial, 25) ||
            'Presupuesto: ' ||presupuesto
        );
    END LOOP;
    
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Presupuestos asignados a todos los departamentos');
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error: ' || SUBSTR(SQLERRM, 1, 200));
END;
/